{"mappings":"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","sources":["src/vendor/src/helpers/helpers.core.ts","src/vendor/src/helpers/helpers.math.ts","src/vendor/src/helpers/helpers.collection.ts","src/vendor/src/helpers/helpers.extras.ts","src/vendor/src/core/core.animator.js","src/vendor/node_modules/.pnpm/@kurkle+color@0.3.0/node_modules/@kurkle/color/dist/color.esm.js","src/vendor/src/helpers/helpers.color.ts","src/vendor/src/core/core.animations.defaults.js","src/vendor/src/helpers/helpers.intl.ts","src/vendor/src/core/core.ticks.js","src/vendor/src/core/core.defaults.js","src/vendor/src/core/core.layouts.defaults.js","src/vendor/src/core/core.scale.defaults.js","src/vendor/src/helpers/helpers.dom.ts","src/vendor/src/helpers/helpers.canvas.js","src/vendor/src/helpers/helpers.config.js","src/vendor/src/helpers/helpers.curve.ts","src/vendor/src/helpers/helpers.easing.ts","src/vendor/src/helpers/helpers.interpolation.ts","src/vendor/src/helpers/helpers.options.ts","src/vendor/src/helpers/helpers.rtl.ts","src/vendor/src/helpers/helpers.segment.js","src/vendor/src/core/core.interaction.js","src/vendor/src/core/core.layouts.js","src/vendor/src/platform/platform.base.js","src/vendor/src/platform/platform.basic.js","src/vendor/src/platform/platform.dom.js","src/vendor/src/platform/index.js","src/vendor/src/core/core.animation.js","src/vendor/src/core/core.animations.js","src/vendor/src/core/core.datasetController.js","src/vendor/src/core/core.element.ts","src/vendor/src/core/core.scale.autoskip.js","src/vendor/src/core/core.scale.js","src/vendor/src/core/core.typedRegistry.js","src/vendor/src/core/core.registry.js","src/vendor/src/core/core.plugins.js","src/vendor/src/core/core.config.js","src/vendor/src/core/core.controller.js","src/vendor/src/core/core.adapters.ts","src/vendor/src/controllers/controller.bar.js","src/vendor/src/controllers/controller.doughnut.js","src/vendor/src/controllers/controller.polarArea.js","src/vendor/src/controllers/controller.bubble.js","src/vendor/src/controllers/controller.line.js","src/vendor/src/controllers/controller.pie.js","src/vendor/src/controllers/controller.radar.js","src/vendor/src/controllers/controller.scatter.js","src/vendor/src/elements/element.arc.ts","src/vendor/src/elements/element.line.js","src/vendor/src/elements/element.point.ts","src/vendor/src/elements/element.bar.js","src/vendor/src/scales/scale.category.js","src/vendor/src/scales/scale.linearbase.js","src/vendor/src/scales/scale.linear.js","src/vendor/src/scales/scale.logarithmic.js","src/vendor/src/scales/scale.radialLinear.js","src/vendor/src/scales/scale.time.js","src/vendor/src/scales/scale.timeseries.js","src/vendor/src/plugins/plugin.colors.ts","src/vendor/src/plugins/plugin.decimation.js","src/vendor/src/plugins/plugin.filler/filler.segment.js","src/vendor/src/plugins/plugin.filler/filler.helper.js","src/vendor/src/plugins/plugin.filler/filler.options.js","src/vendor/src/plugins/plugin.filler/filler.target.stack.js","src/vendor/src/plugins/plugin.filler/simpleArc.js","src/vendor/src/plugins/plugin.filler/filler.target.js","src/vendor/src/plugins/plugin.filler/filler.drawing.js","src/vendor/src/plugins/plugin.filler/index.js","src/vendor/src/plugins/plugin.legend.js","src/vendor/src/plugins/plugin.title.js","src/vendor/src/plugins/plugin.subtitle.js","src/vendor/src/plugins/plugin.tooltip.js","src/vendor/src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.0\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["t","e","exports","module","define","amd","globalThis","self","Chart","this","Object","freeze","__proto__","Colors","jo","Decimation","Uo","Filler","ha","Legend","fa","SubTitle","ba","Title","pa","Tooltip","La","noop","uid","id","isNullOrUndef","value","isArray","Array","type","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","animator","constructor","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","m","exec","p1","p2","hueParse","Color","ret","unpacked","tkeys","j","ok","nk","replace","parseInt","transparent","toLowerCase","nameParse","_rgb","_valid","valid","rgbString","hexString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","rect","getBoundingClientRect","clientX","clientY","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","isIndexable","arr","filter","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","prevValue","inside","subStart","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Vi","easingEffects","ui","Jt","Qt","te","u","_","_deprecated","Pe","De","Ce","Oe","Ae","Te","Le","Ee","Re","Ie","ze","Fe","Ve","We","et","it","nt","at","rt","lt","He","je","$e","ei","oi","ai","li","fe","ge","be","ye","Me","we","ke","Se","fontString","pixelSize","fontStyle","fontFamily","ht","ct","dt","ut","ft","gt","mt","fi","gi","pi","ne","xi","_i","yi","vi","Mi","wi","ki","Si","Pi","z","$","q","tt","Di","Ci","Oi","Li","Ei","Ri","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","minDistance","center","getCenterPoint","getNearestCartesianItems","startAngle","endAngle","getProps","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","stacks","stack","horizontal","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","removeBox","layoutItem","configure","minPadding","availableWidth","availableHeight","layoutBoxes","isHorizontal","wrap","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","vBoxMaxWidth","hBoxMaxHeight","factor","setLayoutDims","updatePos","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","native","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","EXPANDO_KEY","removeAttribute","setAttribute","$chartjs","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Ms","vs","os","as","ys","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","_createAnimations","anim","all","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","ticksLimit","maxTicksLimit","majorIndices","enabled","numMajorIndices","first","newTicks","spacing","ceil","evenMajorSpacing","diff","factors","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","getOpts","pluginOpts","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","Vn","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","halfGrid","maxBarThickness","Infinity","percent","chunk","thickness","stackIndex","rects","BubbleController","zn","LineController","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","Fn","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","_interpolate","interpolated","path","segmentMethod","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","maxR","enableBorder","outer","inner","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","oo","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","angleMargin","Zn","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","addRectPath","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","leftForTextAlign","yForAngle","pathRadiusLine","labelCount","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","_padding","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","textSize","setCenterPoint","extra","outerDistance","pointLabelPosition","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","gridLineOpts","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","zo","CategoryScale","_addedLabels","added","addedLabels","unshift","lastIndexOf","findOrAddLabel","co","bo","Po","Ro","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","firstCh","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","sourcePoints","below","_drawfill","lineOpts","above","clipVertical","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","fontLineHeight","calculateLegendItemHeight","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","_drawArgs","fontOpts","plugin_title","titleBlock","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","determineAlignment","getBackgroundPoint","alignment","paddingAndSize","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms","wn"],"version":3,"file":"index.b3a0b3ce.js.map"}